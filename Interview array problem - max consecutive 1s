Question: For a given array of 0s and 1s, you can change atmost one 0 to 1. Find the maximum consecutive 1s after the operation.

#Brute force approach
A=[0,0,0,1,1,1,1,0,1,1,1,0]
n=len(A)
flag="N"

finalans=0
for i in range(n):
    if A[i]==0:
        A[i]=1
        flag="Y"
        
        ans=0
        cnt=0
        
        for j in range (n):
            if A[j]==1:
                cnt+=1
                ans=max(cnt,ans)
            elif A[j]==0:
        
                cnt=0
        print(ans,i)
    else:
        flag="N"
    print('ChangedA',A)
    #if a 0 was changed to 1, revert it back to 0
    if flag=="Y":
        A[i]=0
    print('RevertedA',A)
    print()

    finalans=max(ans,finalans)

print('finalans',finalans)

#Optimzed Solution using prefix and suffix sum
A=[1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,1,1]
n=len(A)
pre=[0]*n
suff=[0]*n

#creating prefix array

if A[0]==0:
    pre[0]=0
else:
    pre[0]=1


for i in range(1, n):

    if A[i]==1:
        pre[i]=pre[i-1]+1

print(pre)

#creating suffix array

if A[n-1]==0:
    suff[n-1]=0
else:
    suff[n-1]=1

for i in range(n-2, -1,-1):

    if A[i]==1:
        suff[i]=suff[i+1]+1

print(suff)

#finding the max 1s by changing any 0 at a time by follwing method:
# suff sum + prefix sum + changed 0

ans=0
cnt=0

for i in range(n):
    if A[i]==0:
        cnt=pre[i-1]+suff[i+1]+1
        ans=max(cnt,ans)

print(ans)
